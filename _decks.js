// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var Decks, When, _,
    slice = [].slice;

  _ = require('./util');

  When = require('when');

  Decks = (function() {
    function Decks(base, options1) {
      this.base = base;
      this.options = options1;
      this._decks = {};
    }

    Decks.prototype.define = function(name, options) {
      var deck;
      if (options == null) {
        options = {};
      }
      options = _.defaults({}, options, this.options);
      options.name = name;
      options.base = this.base;
      this._decks[name] = deck = new this.options.deck_type(options);
      this.base.will_trigger('deck:new', deck, options);
      return deck;
    };

    Decks.prototype.get = function(id) {
      var deck;
      deck = this._decks[id];
      if (!deck) {
        throw new Error("No such deck " + id + "!");
      }
      return deck;
    };

    Decks.prototype.all = function() {
      return _.values(this._decks);
    };

    Decks.prototype.will_trigger = function() {
      var args, deck, event, id;
      event = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      return When.all((function() {
        var ref, results;
        ref = this._decks;
        results = [];
        for (id in ref) {
          deck = ref[id];
          results.push(deck.will_trigger.apply(deck, [event].concat(slice.call(args))));
        }
        return results;
      }).call(this));
    };

    return Decks;

  })();

  module.exports = Decks;

}).call(this);

//# sourceMappingURL=_decks.js.map

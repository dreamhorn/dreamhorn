// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var Decks, _,
    slice = [].slice;

  _ = require('lodash');

  Decks = (function() {
    function Decks(base, options1) {
      this.base = base;
      this.options = options1;
      this._decks = {};
    }

    Decks.prototype.define = function(id, options) {
      var deck;
      if (options == null) {
        options = {};
      }
      options = _.defaultsDeep({}, options, this.options);
      options.id = id;
      options.base = this.base;
      this._decks[id] = deck = new this.options.deck_type(options);
      this.base.trigger('deck:new', deck, options);
      return deck;
    };

    Decks.prototype.get = function(id) {
      var deck;
      deck = this._decks[id];
      if (!deck) {
        throw new Error("No such deck " + id + "!");
      }
      return deck;
    };

    Decks.prototype.all = function() {
      return _.values(this._decks);
    };

    Decks.prototype.trigger = function() {
      var args, deck, event, id, ref, results;
      event = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];
      ref = this._decks;
      results = [];
      for (id in ref) {
        deck = ref[id];
        results.push(deck.trigger.apply(deck, [event].concat(slice.call(args))));
      }
      return results;
    };

    return Decks;

  })();

  module.exports = Decks;

}).call(this);

//# sourceMappingURL=_decks.js.map

// Generated by CoffeeScript 1.9.3
(function() {
  "use strict";
  var Card, Deck, Decks, Dict, Dreamhorn, Events, Modules, Stack, _,
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  _ = require('lodash');

  Dict = require('collections/dict');

  Stack = require('./stack');

  Card = require('./situation');

  Events = require('./events');

  Deck = require('./deck');

  Modules = require('./_modules');

  Decks = require('./_decks');

  Dreamhorn = (function(superClass) {
    extend(Dreamhorn, superClass);

    function Dreamhorn(options) {
      options = options || {};
      this.options = _.defaultsDeep(options, Dreamhorn.defaults);
      this.decks = new Decks(this, this.options);
      this.decks.define('main');
      this.modules = new Modules(this, this.options);
    }

    Dreamhorn.prototype.extend = function(extensions) {
      _.extend(this, extensions);
      return this;
    };

    return Dreamhorn;

  })(Events);

  Dreamhorn.extend = function(extensions) {
    return _.extend(Dreamhorn.prototype, extensions);
  };

  Dreamhorn.extend_defaults = function(extensions) {
    return _.extend(Dreamhorn.defaults, _.defaultsDeep({}, extensions, Dreamhorn.defaults));
  };

  Dreamhorn.defaults = {
    deck_type: Deck
  };

  module.exports = Dreamhorn;

}).call(this);
